/* Start of top-level graph */
digraph Workflow {
rankdir=TB

/* Title for graph */
fontname=Helvetica; fontsize=18; labelloc=t
label="Clean-Address-Field"

/* Start of double cluster for drawing box around nodes in workflow */
subgraph cluster_workflow_box_outer { label=""; color=black; penwidth=2
subgraph cluster_workflow_box_inner { label=""; penwidth=0

/* Style for nodes representing atomic programs in workflow */
node[shape=box style=filled fillcolor="#CCFFCC" peripheries=1 fontname=Helvetica]

/* Nodes representing atomic programs in workflow */
"core/text-transform0#" [shape=record rankdir=LR label="{<f0> core/text-transform0# |<f1> Text transform on cells in column Address using expression value.trim()}"];
"core/text-transform1#" [shape=record rankdir=LR label="{<f0> core/text-transform1# |<f1> Text transform on cells in column Address using expression value.replace(/\\s+/,' ')}"];
"core/text-transform2#" [shape=record rankdir=LR label="{<f0> core/text-transform2# |<f1> Text transform on cells in column Address using expression value.toUppercase()}"];
"core/text-transform3#" [shape=record rankdir=LR label="{<f0> core/text-transform3# |<f1> Text transform on cells in column Address using expression grel\:value.replace(\"\\.\", \"\")}"];

/* Style for nodes representing non-parameter data channels in workflow */
node[shape=box style="rounded,filled" fillcolor="#FFFFCC" peripheries=1 fontname=Helvetica]

/* Nodes for non-parameter data channels in workflow */
table4
table0
table1
table2
table3

/* Style for nodes representing parameter channels in workflow */
node[shape=box style="rounded,filled" fillcolor="#FCFCFC" peripheries=1 fontname=Helvetica]

/* Nodes representing parameter channels in workflow */
"col-name:Address"
"expression:value.trim()"
"expression:value.replace(/\\s+/,'_')"
"expression:value.toUppercase()"
"expression:grel:value.replace(\"\\.\",_\"\")"

/* Edges representing connections between programs and channels */
"core/text-transform0#" -> table1
"col-name:Address" -> "core/text-transform0#"
"expression:value.trim()" -> "core/text-transform0#"
table0 -> "core/text-transform0#"
"core/text-transform1#" -> table2
"col-name:Address" -> "core/text-transform1#"
"expression:value.replace(/\\s+/,'_')" -> "core/text-transform1#"
table1 -> "core/text-transform1#"
"core/text-transform2#" -> table3
"col-name:Address" -> "core/text-transform2#"
"expression:value.toUppercase()" -> "core/text-transform2#"
table2 -> "core/text-transform2#"
"core/text-transform3#" -> table4
"col-name:Address" -> "core/text-transform3#"
"expression:grel:value.replace(\"\\.\",_\"\")" -> "core/text-transform3#"
table3 -> "core/text-transform3#"

/* End of double cluster for drawing box around nodes in workflow */
}}

/* Style for nodes representing workflow input ports */
node[shape=circle style="rounded,filled" fillcolor="#FFFFFF" peripheries=1 fontname=Helvetica width=0.2]

/* Nodes representing workflow input ports */
"col-name:Address_input_port" [label=""]
"expression:value.toUppercase()_input_port" [label=""]
"expression:value.trim()_input_port" [label=""]
"expression:value.replace(/\\s+/,'_')_input_port" [label=""]
"expression:grel:value.replace(\"\\.\",_\"\")_input_port" [label=""]
table0_input_port [label=""]

/* Style for nodes representing workflow output ports */
node[shape=circle style="rounded,filled" fillcolor="#FFFFFF" peripheries=1 fontname=Helvetica width=0.2]

/* Nodes representing workflow output ports */
table4_output_port [label=""]

/* Edges from input ports to channels */
"col-name:Address_input_port" -> "col-name:Address"
"expression:value.toUppercase()_input_port" -> "expression:value.toUppercase()"
"expression:value.trim()_input_port" -> "expression:value.trim()"
"expression:value.replace(/\\s+/,'_')_input_port" -> "expression:value.replace(/\\s+/,'_')"
"expression:grel:value.replace(\"\\.\",_\"\")_input_port" -> "expression:grel:value.replace(\"\\.\",_\"\")"
table0_input_port -> table0

/* Edges from channels to output ports */
table4 -> table4_output_port

/* End of top-level graph */
}